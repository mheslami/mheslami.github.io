{"version":3,"sources":["components/header/Header.tsx","components/header/styles.ts","components/footer/Footer.tsx","components/footer/styles.ts","components/layouts/one-column/OneColumnLayout.tsx","components/layouts/BaseLayout.ts","config/layout-map.ts","components/layouts/one-column/styles.ts","services/content-service.ts","services/component-service.tsx","themes/theme1.ts","components/app/App.tsx","components/app/styles.ts","serviceWorker.js","index.tsx"],"names":["Header","classes","this","props","react_default","a","createElement","AppBar_default","className","root","Toolbar_default","Link","title","navSettings","home","to","path","menuItem","imageProfile","src","siteSettings","profile_image_path","topNav","map","nav","key","MenuItem_default","text","Component","withStyles","flexGrow","color","width","height","borderRadius","margin","textDecoration","grow","menuButton","marginLeft","marginRight","SocialIcon","require","Footer","social","url","powered","href","backgroundColor","text-align","padding","display","& .social-icon","OneColumnLayout","state","content","document","react_markdown_default","escapeHtml","source","first_column","BaseLayout","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","then","setState","layoutMap","one-column","component","theme","maxWidth","& table","borderBottom","concat","palette","secondary","light","& thead","& tr","justifyContent","alignItems","model","OneColumnLayoutModel","getContent","routePath","Promise","res","rej","contentPath","process","axios","get","response","data","refs","length","refPromises","ref","file","fc","name","all","resolveComponentWithData","routeConfig","layout","matchLayout","ResolvedComponent","_React$Component","_temp","inherits","createClass","value","React","createMuiTheme","primary","main","typography","useNextVariants","App","styles","theme1","BrowserRouter","app","Helmet","header_Header","keys","routes","Route","exact","footer_Footer","minHeight","flexFlow","flex","marginTop","Boolean","window","location","hostname","match","render","app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bfde104.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport navSettings from '../../config/nav-settings.json';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/icons/Menu';\nimport {withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport propTypes from 'prop-types';\nimport siteSettings from '../../config/site-settings.json';\nimport styles from './styles';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\nclass Header extends Component {\n\n  render(){\n    const { classes } = this.props as any;\n\n    return (\n      <AppBar className = {classes.root} >\n        <Toolbar>\n          <Link title ={navSettings.home.title} to={navSettings.home.path} className ={classes.menuItem} >\n            <img className={classes.imageProfile} src={siteSettings.profile_image_path} />\n          </Link>\n        {/* <MenuItem className ={classes.menuItem}>\n          <Menu />\n        </MenuItem> */}\n\n        {navSettings.topNav.map((nav) => (\n          <Link key={nav.path} title ={nav.title} to={nav.path} className ={classes.menuItem} >\n            <MenuItem key={nav.path} className ={classes.menuItem}  >\n            {nav.text}\n            </MenuItem>\n          </Link>\n        ))}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n","export default {\n  root: {\n    flexGrow: 1,\n    color: 'white'\n  },\n  imageProfile: {\n    width: '64px;',\n    height: '64px;',\n    borderRadius: '32px;',\n    margin: '0.5rem 0;'\n  },\n  menuItem: {\n    textDecoration: 'none',\n    color: 'white'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nconst { SocialIcon } = require('react-social-icons');\nimport styles from './styles';\nclass Footer extends Component {\n  render() {\n    const { classes } = this.props as any;\n\n    return (\n      <footer className={classes.root}>\n        <div className={classes.social}>\n          <SocialIcon url=\"https://github.com/moeslami\" />\n          <SocialIcon url=\"https://www.linkedin.com/in/mohammadeslami/\" />\n          <SocialIcon url=\"https://twitter.com/mheslami\" />\n        </div>\n        <div className={classes.powered}>Powered by <a href=\"https://github.com/moeslami/sabalan\" >Â©Sabalan</a>. All Rights Reserved</div>\n      </footer>\n    );\n  }\n}\n\nexport default withStyles(styles)(Footer);\n","export default {\n  root: {\n    backgroundColor: '#f2f2f2',\n    'text-align': 'center',\n    color: '#888',\n    padding: '1rem',\n  },\n  powered: {\n    'text-align': 'right'\n  },\n  social:{\n    display: 'flex',\n    '& .social-icon':{\n      margin: 'auto 0.5rem'\n    }\n  }\n}\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { withStyles } from '@material-ui/core/styles';\nimport { BaseLayout } from '../BaseLayout';\nimport styles from './styles';\nimport {LinearProgress} from '@material-ui/core';\n\nclass OneColumnLayout extends BaseLayout<OneColumnLayoutModel> {\n\n  render() {\n\n    const {classes} = this.props as any;\n\n    if(this.state.content){\n      document.title = this.state.content.title;\n    }\n\n    return this.state.content ?\n      (\n        <div className={classes.root}>\n          <h1>{this.state.content.title}</h1>\n          {/* <LinearProgress variant=\"determinate\" value={50} /> */}\n          <ReactMarkdown escapeHtml={false} source={this.state.content.first_column} />\n        </div>\n\n      ) : (<div className={classes.root}></div>);\n  }\n}\n\nexport class OneColumnLayoutModel {\n  constructor(public title:string, public first_column: string) {\n  }\n}\n\nexport default withStyles(styles)(OneColumnLayout);\n","import { Component } from \"react\";\n\nclass BaseLayout<T> extends Component {\n  constructor(props:any){\n    super(props)\n  }\n\n  state: {content?: T} = {};\n\n  componentDidMount(){\n    (this.props as any).content.then((content:any) => {\n      this.setState({content});\n    });\n  }\n}\n\nexport { BaseLayout };\n","import OneColumnLayout, { OneColumnLayoutModel } from '../components/layouts/one-column/OneColumnLayout';\n\nconst layoutMap = {\n  \"one-column\": { component: OneColumnLayout, model: OneColumnLayoutModel }\n}\n\nexport default layoutMap;\n","import { FormHelperText } from \"@material-ui/core\";\n\nexport default (theme: any) => ({\n  root: {\n    margin: \"auto 2rem\",\n    maxWidth: \"100%\",\n    \"& table\": {\n      width: \"100%\",\n      margin: \"auto\",\n      borderBottom: `solid 1px ${theme.palette.secondary.light}`,\n      \"& thead\": {\n        \"& tr\": {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  }\n});\n","import axios from 'axios';\n\nconst publicUrl = process.env.PUBLIC_URL;\n\nconst getContent = (routePath: string) => {\n  return new Promise((res, rej) => {\n    let content: any = {};\n    let contentPath = `${publicUrl}/content/${routePath}`;\n    axios.get(`${contentPath}/index.json`).then((response) => {\n      content = response.data;\n      if (content.refs && content.refs.length) {\n        let refPromises = content.refs.map((ref: any) => {\n          return axios.get(`${contentPath}/${ref.file}`).then((fc) => {\n            content[ref.name] = fc.data;\n          });\n        });\n        Promise.all(refPromises).then(() => {\n          res(content);\n        })\n      }else{\n        res(content);\n      }\n    });\n  });\n\n\n};\n\nexport  { getContent };\n","\nimport React, { ClassType } from 'react';\nimport layoutMap from '../config/layout-map';\nimport { getContent } from './content-service';\nimport { BaseLayout } from '../components/layouts/BaseLayout';\n\nconst matchLayout = (routeConfig: any): any => {\n  return (layoutMap as any)[routeConfig.layout] || null;\n}\n\nconst resolveComponentWithData = (routePath:string, routeConfig: any): any => {\n  const layout = matchLayout(routeConfig);\n  if (!layout) return null;\n\n  const ResolvedComponent = layout.component;\n  const ContentModel = layout.model;\n\n  return class extends React.Component {\n    content: any;\n    constructor(props:any) {\n      super(props);\n      this.content = getContent(routePath)\n    };\n\n\n    render() {\n      // ... and renders the wrapped component with the fresh data!\n      // Notice that we pass through any additional props\n      return <ResolvedComponent content={this.content} />;\n    }\n  };\n\n};\n\nexport { resolveComponentWithData };\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {purple, green} from '@material-ui/core/colors';\n\nconst palette = {\n  primary: { main: '#E53935' },\n  secondary: { main: '#F8BBD0' }\n};\n\nconst typography = {\n  useNextVariants: true,\n}\n\nexport default createMuiTheme({ palette,  typography });\n","import React, { Component, ComponentClass } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Header from '../header/Header';\nimport routes from '../../config/routes.json';\nimport Footer from '../footer/Footer';\nimport { Helmet } from 'react-helmet';\nimport siteSettings from '../../config/site-settings.json';\nimport { resolveComponentWithData } from '../../services/component-service';\nimport 'typeface-roboto'\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme1 from '../../themes/theme1';\nimport styles from './styles';\nimport { Provider } from 'react-redux';\n// import store from '../../redux/store';\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props as any;\n\n    return (\n      // <Provider store={store}>\n\n        <MuiThemeProvider theme={theme1}>\n          <BrowserRouter>\n            <div className={classes.app}>\n              <Helmet>\n                <title>{siteSettings.title}</title>\n              </Helmet>\n              <Header></Header>\n              <main className={classes.main}>\n                {Object.keys(routes).map((routePath) => {\n                  const routeConfig = (routes as any)[routePath];\n                  const ResolvedComponent = resolveComponentWithData(routePath, routeConfig);\n                  return (<Route key={`/${routePath}`} path={`/${routePath}`} component={ResolvedComponent} exact={routeConfig.exact || false} />);\n                })}\n              </main>\n              <Footer></Footer>\n            </div>\n          </BrowserRouter>\n        </MuiThemeProvider>\n      // </Provider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","\nexport default {\n  app: {\n    display: \"flex\",\n    minHeight: \"100vh\",\n    flexFlow: 'column wrap',\n  },\n  main: {\n    flex: 1,\n    marginTop: '90px'\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","///<reference path='../types/react-snapshot.d.ts'/>\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst { render } = require('react-snapshot');\nimport './index.scss';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}